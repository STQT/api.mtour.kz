version: '3'

volumes:
  prod_postgres_data: {}
  prod_postgres_data_backups: {}
  prod_traefik: {}
  prod_django_media: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: medtour_production_django
    volumes:
      - /var/www/api.mtour.kz/media:/app/medtour/media
      - /var/www/api.mtour.kz/static:/app/staticfiles
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    ports:
      - '8000:5000'

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: medtour_production_postgres
    volumes:
      - prod_postgres_data:/var/lib/postgresql/data
      - prod_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

#  traefik:
#    build:
#      context: .
#      dockerfile: ./compose/production/traefik/Dockerfile
#    image: medtour_production_traefik
#    depends_on:
#      - django
#    volumes:
#      - production_traefik:/etc/traefik/acme
#    ports:
#      - '0.0.0.0:80:80'
#      - '0.0.0.0:443:443'
#      - '0.0.0.0:5555:5555'

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: medtour_production_celeryworker
    command: /start-celeryworker
    ports: [ ]

  celerybeat:
    <<: *django
    image: medtour_production_celerybeat
    command: /start-celerybeat
    ports: [ ]


#   nginx:
#     build:
#       context: .
#       dockerfile: ./compose/production/nginx/Dockerfile
#     image: medtour_local_nginx
#     depends_on:
#       - django
#     volumes:
#       - production_django_media:/usr/share/nginx/media:ro
